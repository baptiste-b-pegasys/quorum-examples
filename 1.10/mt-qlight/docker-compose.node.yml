version: "3.6"

x-quorum-def:
  &quorum-def
  restart: "on-failure"
  image: "${QUORUM_DOCKER_IMAGE:-quorumengineering/quorum:21.7.1}"
  expose:
    - "21000"
    - "50400"
  healthcheck:
    test: ["CMD", "wget", "--spider", "--proxy", "off", "http://localhost:8545"]
    interval: 3s
    timeout: 3s
    retries: 10
    start_period: 5s
  labels:
    com.quorum.consensus: ${QUORUM_CONSENSUS:-istanbul}
  entrypoint: ["/usr/bin/dumb-init", "--"]
  command: 
    - /bin/sh
    - -c
    - |
      set -e
      apk add jq
      UDS_WAIT=10
      if [ "$${PRIVATE_CONFIG}" != "ignore" ]; then
        for i in $$(seq 1 100)
        do
          if [ -S $${PRIVATE_CONFIG} ] && \
            [ "I'm up!" == "$$(wget --timeout $${UDS_WAIT} -qO- --proxy off 172.16.239.10$${NODE_ID}:9000/upcheck)" ];
          then break
          else
            echo "Sleep $${UDS_WAIT} seconds. Waiting for TxManager."
            sleep $${UDS_WAIT}
          fi
        done
      fi
      DDIR="/qdata/dd"

      
      if [ -d "$${DDIR}" ]; then
        echo "Resume"
        CONSENSUS_RPC_API="raft"
        if [ "${QUORUM_CONSENSUS:-istanbul}" == "istanbul" ]; then
          CONSENSUS_RPC_API="istanbul"
        elif [ "${QUORUM_CONSENSUS:-istanbul}" == "qbft" ]; then
          CONSENSUS_RPC_API="istanbul"
        fi
      else
        mkdir -p $${DDIR}/keystore
        mkdir -p $${DDIR}/geth
        cp /examples/raft/nodekey$${NODE_ID} $${DDIR}/geth/nodekey
        cp /examples/keys/key$${NODE_ID} $${DDIR}/keystore/
        cp /examples/disallowed-nodes.json $${DDIR}/
        jq 'del(.[4,5,6])' /examples/permissioned-nodes.json | sed 's/^\(.*\)@.*\?\(.*\)raftport=5040\([0-9]\)\(.*\)$$/\1@172.16.239.1\3:21000?discport=0\&raftport=50400\4/g' > $${DDIR}/static-nodes.json
        cp $${DDIR}/static-nodes.json $${DDIR}/permissioned-nodes.json
        cat $${DDIR}/static-nodes.json
        UPDATE_QUERY=".config.isMPS = false"
        GENESIS_FILE="/examples/genesis.json"
        CONSENSUS_RPC_API="raft"
        if [ "${QUORUM_CONSENSUS:-istanbul}" == "istanbul" ]; then
          CONSENSUS_RPC_API="istanbul"
          GENESIS_FILE="/examples/istanbul-genesis.json"
          #set the extradata for 4 nodes
          UPDATE_QUERY=$${UPDATE_QUERY}' | .extraData = "0x0000000000000000000000000000000000000000000000000000000000000000f89af85494d8dba507e85f116b1f7e231ca8525fc9008a6966946571d97f340c8495b661a823f2c2145ca47d63c294e36cbeb565b061217930767886474e3cde903ac594f512a992f3fb749857d758ffda1330e590fa915eb8410000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c0"'
        elif [ "${QUORUM_CONSENSUS:-istanbul}" == "qbft" ]; then
          CONSENSUS_RPC_API="istanbul"
          GENESIS_FILE="/examples/qbft-genesis.json"
          #set the extradata for 4 nodes
          UPDATE_QUERY=$${UPDATE_QUERY}' | .extraData = "0xf87aa00000000000000000000000000000000000000000000000000000000000000000f85494d8dba507e85f116b1f7e231ca8525fc9008a6966946571d97f340c8495b661a823f2c2145ca47d63c294e36cbeb565b061217930767886474e3cde903ac594f512a992f3fb749857d758ffda1330e590fa915ec080c0"'
        fi
        MPS_GENESIS_FILE=$${DDIR}/mps-genesis.json
        echo "JQ Update Query:" $${UPDATE_QUERY}
        jq "$${UPDATE_QUERY}" $${GENESIS_FILE} > $${MPS_GENESIS_FILE}
        cat $${MPS_GENESIS_FILE}
        geth --datadir $${DDIR} init $${MPS_GENESIS_FILE}
      fi
      MPS_GENESIS_FILE=$${DDIR}/mps-genesis.json
      NETWORK_ID=$$(cat $${MPS_GENESIS_FILE} | grep chainId | awk -F " " '{print $$2}' | awk -F "," '{print $$1}')
      GETH_ARGS_raft="--raft --raftport 50400"
      GETH_ARGS_istanbul="--istanbul.blockperiod 1 --mine --miner.threads 1 --syncmode full"
      GETH_ARGS_qbft="--istanbul.blockperiod 1 --mine --miner.threads 1 --syncmode full"

      geth \
        --identity node$${NODE_ID}-$${QUORUM_CONSENSUS:-istanbul} \
        --datadir $${DDIR} \
        --permissioned \
        --nodiscover \
        --verbosity 3 \
        --networkid $${NETWORK_ID} \
        --http \
        --http.corsdomain "*" \
        --http.vhosts "*" \
        --http.addr 0.0.0.0 \
        --http.port 8545 \
        --http.api admin,eth,debug,miner,net,shh,txpool,personal,web3,quorum,$${CONSENSUS_RPC_API} \
        --ws \
        --ws.addr 0.0.0.0 \
        --ws.port 8546 \
        --ws.api admin,eth,debug,miner,net,shh,txpool,personal,web3,quorum,$${CONSENSUS_RPC_API} \
        --port 21000 \
        --unlock 0 \
        --allow-insecure-unlock \
        --password /examples/passwords.txt \
        ${QUORUM_GETH_ARGS:-} $${GETH_ARGS_${QUORUM_CONSENSUS:-istanbul}}

      echo $$?

x-tx-manager-def:
  &tx-manager-def
  image: "${QUORUM_TX_MANAGER_DOCKER_IMAGE:-quorumengineering/tessera:21.7.2}"
  expose:
    - "9000"
    - "9080"
  restart: "no"
  healthcheck:
    test: ["CMD-SHELL", "[ -S /qdata/tm/tm.ipc ] || exit 1"]
    interval: 3s
    timeout: 3s
    retries: 20
    start_period: 5s
  entrypoint:
    - /bin/sh
    - -c
    - |
      if [ "$${PRIVATE_CONFIG}" == "ignore" ]; then
        /bin/true
        exit 0
      fi
      DDIR=/qdata/tm
      DOCKER_IMAGE="${QUORUM_TX_MANAGER_DOCKER_IMAGE:-quorumengineering/tessera:21.7}"
      TX_MANAGER=$$(echo $${DOCKER_IMAGE} | sed 's/^.*\/\(.*\):.*$$/\1/g')
      
      if [ -f "/tessera/tessera-app.jar" ]; then
          TESSERA_VERSION=$$(unzip -p /tessera/tessera-app.jar META-INF/MANIFEST.MF | grep Tessera-Version | cut -d" " -f2)
      else
          TESSERA_VERSION=$$(/tessera/bin/tessera version)
      fi
      echo "Tessera version: $${TESSERA_VERSION}"
      # sorting versions to target correct configuration
      V08=$$(echo -e "0.8\n$${TESSERA_VERSION}" | sort -n -r -t '.' -k 1,1 -k 2,2 | head -n1)
      V09AndAbove=$$(echo -e "0.9\n$${TESSERA_VERSION}" | sort -n -r -t '.' -k 1,1 -k 2,2 | head -n1)
      TESSERA_CONFIG_TYPE="-09"
      case "$${TESSERA_VERSION}" in
          "$${V09AndAbove}")
              TESSERA_CONFIG_TYPE="-09"
              ;;
      esac
      echo Config type $${TESSERA_CONFIG_TYPE}

      if [ -d "$${DDIR}" ]; then
        echo "Resume"
      else
        mkdir -p $${DDIR}
        cp /examples/keys/tm$${NODE_ID}.pub $${DDIR}/tm.pub
        cp /examples/keys/tm$${NODE_ID}.key $${DDIR}/tm.key
    
        #generating the two config flavors
        cat <<EOF > $${DDIR}/tessera-config-09.json
        {
          "useWhiteList": false,
          "jdbc": {
            "username": "sa",
            "password": "",
            "url": "jdbc:h2:./$${DDIR}/db;MODE=Oracle;TRACE_LEVEL_SYSTEM_OUT=0",
            "autoCreateTables": true
          },
          "serverConfigs":[
          {
            "app":"ThirdParty",
            "enabled": true,
            "serverAddress": "http://$$(hostname -i):9080",
            "communicationType" : "REST"
          },
          {
            "app":"Q2T",
            "enabled": true,
            "serverAddress": "unix:$${DDIR}/tm.ipc",
            "communicationType" : "REST"
          },
          {
            "app":"P2P",
            "enabled": true,
            "serverAddress": "http://$$(hostname -i):9000",
            "sslConfig": {
              "tls": "OFF"
            },
            "communicationType" : "REST"
          }
          ],
          "peer": [
              {
                  "url": "http://txmanager1:9000"
              },
              {
                  "url": "http://txmanager2:9000"
              },
              {
                  "url": "http://txmanager3:9000"
              },
              {
                  "url": "http://txmanager4:9000"
              },
              {
                  "url": "http://txmanager5:9000"
              },
              {
                  "url": "http://txmanager6:9000"
              },
              {
                  "url": "http://txmanager7:9000"
              }
          ],
          "keys": {
            "passwords": [],
            "keyData": [
              {
                "config": $$(cat $${DDIR}/tm.key),
                "publicKey": "$$(cat $${DDIR}/tm.pub)"
              }
            ]
          },
          "alwaysSendTo": []
        }
      EOF
        cat $${DDIR}/tessera-config$${TESSERA_CONFIG_TYPE}.json
      fi

      if [ -f "/tessera/tessera-app.jar" ]; then
          java -Xms128M -Xmx128M -jar /tessera/tessera-app.jar -configfile $${DDIR}/tessera-config$${TESSERA_CONFIG_TYPE}.json
      else
          export JAVA_OPTS="-Xms128M -Xmx128M"
          /tessera/bin/tessera -configfile $${DDIR}/tessera-config$${TESSERA_CONFIG_TYPE}.json
      fi

services:
  node2:
    << : *quorum-def
    hostname: node2
    ports:
      - "22001:8545"
      - "23001:8546"
    volumes:
      - vol2:/qdata
      - ./examples/7nodes:/examples:ro
    depends_on:
      - txmanager2
    environment:
      - PRIVATE_CONFIG=${PRIVATE_CONFIG:-/qdata/tm/tm.ipc}
      - NODE_ID=2
    networks:
      quorum-examples-net:
        ipv4_address: 172.16.239.12
  txmanager2:
    << : *tx-manager-def
    hostname: txmanager2
    ports:
      - "9082:9080"
    volumes:
      - vol2:/qdata
      - ./examples/7nodes:/examples:ro
    networks:
      quorum-examples-net:
        ipv4_address: 172.16.239.102
    environment:
      - PRIVATE_CONFIG=${PRIVATE_CONFIG:-/qdata/tm/tm.ipc}
      - NODE_ID=2
  node3:
    << : *quorum-def
    hostname: node3
    ports:
      - "22002:8545"
      - "23002:8546"
    volumes:
      - vol3:/qdata
      - ./examples/7nodes:/examples:ro
    depends_on:
      - txmanager3
    environment:
      - PRIVATE_CONFIG=${PRIVATE_CONFIG:-/qdata/tm/tm.ipc}
      - NODE_ID=3
    networks:
      quorum-examples-net:
        ipv4_address: 172.16.239.13
  txmanager3:
    << : *tx-manager-def
    hostname: txmanager3
    ports:
      - "9083:9080"
    volumes:
      - vol3:/qdata
      - ./examples/7nodes:/examples:ro
    networks:
      quorum-examples-net:
        ipv4_address: 172.16.239.103
    environment:
      - PRIVATE_CONFIG=${PRIVATE_CONFIG:-/qdata/tm/tm.ipc}
      - NODE_ID=3
  node4:
    << : *quorum-def
    hostname: node4
    ports:
      - "22003:8545"
      - "23003:8546"
    volumes:
      - vol4:/qdata
      - ./examples/7nodes:/examples:ro
    depends_on:
      - txmanager4
    environment:
      - PRIVATE_CONFIG=${PRIVATE_CONFIG:-/qdata/tm/tm.ipc}
      - NODE_ID=4
    networks:
      quorum-examples-net:
        ipv4_address: 172.16.239.14
  txmanager4:
    << : *tx-manager-def
    hostname: txmanager4
    ports:
      - "9084:9080"
    volumes:
      - vol4:/qdata
      - ./examples/7nodes:/examples:ro
    networks:
      quorum-examples-net:
        ipv4_address: 172.16.239.104
    environment:
      - PRIVATE_CONFIG=${PRIVATE_CONFIG:-/qdata/tm/tm.ipc}
      - NODE_ID=4